if (System.getProperty("http.proxyUser") != null) {
    Authenticator.setDefault(new Authenticator() {
        public PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication(
                    System.getProperty("http.proxyUser"), System.getProperty("http.proxyPassword").toCharArray());
        }
    });
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.sourcemuse.gradle.plugin:gradle-mongo-plugin:0.7.0'
    }
}

apply plugin: 'mongo'
apply plugin: 'java'

sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {

    // compile
    compile 'commons-collections:commons-collections:3.2'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'org.codehaus.groovy:groovy-all:2.4.3'


    compile 'org.springframework.data:spring-data-mongodb:1.7.0.RELEASE'
    //compile 'org.springframework.data:spring-data-mongodb-parent:1.7.0.RELEASE'
    //compile 'org.mongodb:mongo-java-driver:3.0.1'


    // test
    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                'Implementation-Version': version
    }
}